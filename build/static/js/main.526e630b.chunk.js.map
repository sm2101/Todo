{"version":3,"sources":["Components/Header.js","Components/AddTodo.js","redux/actions.js","Components/TodoItem.js","Components/TodoList.js","Components/ConfirmAdd.js","Components/ThemeButton.js","App.js","reportWebVitals.js","redux/states.js","redux/store.js","redux/reducers.js","index.js"],"names":["links","name","key","url","iconProps","iconName","styles","root","fontSize","color","Header","theme","useSelector","state","initializeIcons","Nav","groups","selectedKey","className","mode","DayPickerStrings","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","isRequiredErrorMessage","invalidInputErrorMessage","closeButtonAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","statusOptions","text","AddTodo","history","useState","date","setDate","DayOfWeek","Sunday","firstDayOfWeek","status","setStatus","title","setTitle","desc","setDesc","TextField","label","required","value","onChange","e","target","multiline","autoAdjustHeight","DatePicker","strings","placeholder","ariaLabel","onSelectDate","d","Dropdown","undefined","item","options","PrimaryButton","onClick","todo","id","uuid","dueDate","JSON","stringify","slice","window","localStorage","setItem","push","disabled","length","ADD_TODO","DELETE_TODO","UPDATE_TODO","CHANGE_THEME","deleteTodo","todoId","type","payload","cardTokens","childrenMargin","TodoItem","props","due","stat","confirm","dispatch","useDispatch","edit","setEdit","useHistory","Card","aria-label","horizontal","tokens","Section","Text","removeItem","TodoList","todos","style","margin","map","ConfirmAdd","parse","getItem","ThemeButton","class","aria-hidden","App","dir","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","combineReducers","newTodos","action","filter","idx","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.526e630b.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav, initializeIcons } from '@fluentui/react';\nimport {useSelector} from 'react-redux';\n\n\nconst links = [\n  {\n    name:'Todo App',\n    links: [\n      {\n        name: 'Todo List',\n        key:'key1',\n        url: '/',\n        iconProps: {\n          iconName: 'PageList',\n          styles: {\n            root: {\n              fontSize: 20,\n              color: '#106ebe',\n            },\n          }\n        }\n      },\n      {\n        name: 'Add Todo Task',\n        key: 'key2',\n        url: '/add',\n        iconProps: {\n          iconName: 'AddToShoppingList',\n          styles: {\n            root: {\n              fontSize: 20,\n              color: '#106ebe',\n            },\n          }\n        }\n      },\n    ],\n  },\n];\n\nfunction Header() {\n  const {theme} = useSelector(state => ({...state}))\n    initializeIcons();\n  return (\n    <Nav\n      groups={links}\n      selectedKey = {null}\n      className={theme.mode?\"nav nav-light\":\"nav nav-dark\"}\n    />\n  );\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { DatePicker, DayOfWeek} from '@fluentui/react'; \nimport { Dropdown } from '@fluentui/react/lib/Dropdown';\nimport { PrimaryButton } from 'office-ui-fabric-react';\nimport {v1 as uuid} from 'uuid';\nimport {useSelector} from 'react-redux';\n  const DayPickerStrings = { \n    months: [ \n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ], \n  \n    shortMonths: [ \n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ], \n  \n    days: [ \n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday'\n    ], \n  \n    shortDays: [ \n      'S',\n      'M',\n      'T',\n      'W',\n      'T',\n      'F',\n      'S'\n    ], \n  \n    goToToday: 'Go to today', \n    prevMonthAriaLabel: 'Go to previous month', \n    nextMonthAriaLabel: 'Go to next month', \n    prevYearAriaLabel: 'Go to previous year', \n    nextYearAriaLabel: 'Go to next year', \n  \n    isRequiredErrorMessage: 'Start date is required.', \n    invalidInputErrorMessage: 'Invalid date format.',\n    closeButtonAriaLabel: 'Close date picker',\n    monthPickerHeaderAriaLabel: '{0}, select to change the year',\n    yearPickerHeaderAriaLabel: '{0}, select to change the month',\n  }; \n  \n//   export interface IDatePickerBasicExampleState { \n//     firstDayOfWeek?: DayOfWeek; \n//     value?: Date; \n//   } \n\nconst statusOptions = [\n    {key:'ToDo', text:'ToDo'},\n    {key:'Ongoing', text :'Ongoing'},\n    {key:'Stalled', text :'Stalled'},\n    {key:'Done', text :'Done'}\n  ];\n\nconst AddTodo = ({history}) => {\n    \n    const [date, setDate]                     = useState(\"\"),\n          [firstDayOfWeek, setFirstDayOfWeek] = useState(DayOfWeek.Sunday),\n          [status, setStatus]                 = useState(\"\"),\n          [title, setTitle]                   = useState(\"\"),\n          [desc, setDesc]                     = useState(\"\");\n\n    const handleClick = () =>{\n        const todo = {\n            id:uuid(),\n            title,\n            desc,\n            dueDate:JSON.stringify(date).slice(1,11),\n            status\n        }\n        window.localStorage.setItem(\"TodoInfo\",JSON.stringify(todo))\n        history.push(\"/confirm\")\n    }\n    const {theme} = useSelector(state => ({...state}))\n    return (\n        <div className = {theme.mode?\"container container-light\":\"container container-dark\"}>\n            <div className=\"ms-Grid\">\n                <div className=\"ms-Grid-row\">\n                    <div className=\"ms-Grid-col ms-sm12\">\n                        <TextField \n                        label = \"Title\" \n                        required  \n                        className = \"mx-c\"\n                        value = {title}\n                        onChange = {(e) => {setTitle(e.target.value)}}\n                        />\n                    </div>\n                    <div className=\"ms-Grid-col ms-sm12\">\n                        <TextField \n                        label=\"Description\" \n                        className = \"mx-c\" \n                        value = {desc}\n                        onChange = {(e) => setDesc(e.target.value)}\n                        multiline \n                        autoAdjustHeight \n                        required\n                        />\n                    </div>\n                    <div className=\"ms-Grid-col ms-sm12\">\n                    <DatePicker\n                            className=\"mx-c\"\n                            label = \"Due Date\"\n                            firstDayOfWeek={firstDayOfWeek}\n                            strings={DayPickerStrings}\n                            placeholder=\"Select a date...\"\n                            ariaLabel=\"Select a date\"\n                            value = {date}\n                            onSelectDate = {(d) => setDate(d)}\n                        />\n                    </div>\n                    <div className=\"ms-Grid-col ms-sm12\">\n                    <Dropdown\n                        label=\"Status\"\n                        selectedKey={status ? status.key : undefined}\n                        onChange={(e,item) =>{setStatus(item)}}\n                        placeholder=\"Select a Status\"\n                        options={statusOptions}\n                        className = \"mx-c\"\n                        value = {status}\n                    />\n                    </div>\n                    <div className=\"ms-Grid-col ms-sm-12 btn-cont\">\n                        <PrimaryButton \n                        text = \"Save\" \n                        onClick = {handleClick} \n                        disabled = {title.length < 1 || desc.length <1}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddTodo\n","export const ADD_TODO = \"ADD_TODO\"\nexport const DELETE_TODO = \"DELETE_TODO\"\nexport const UPDATE_TODO = \"UPDATE_TODO\"\nexport const CHANGE_THEME = \"CHANGE_THEME\"\nexport function addTodo(todo){\n    return{\n        type:ADD_TODO,\n        payload: todo\n    }\n}\nexport function deleteTodo(todoId){\n    return{\n        type:DELETE_TODO,\n        payload: todoId\n    }\n}\nexport function updateTodo(todo){\n    return{\n        type:UPDATE_TODO,\n        payload: todo\n    }\n}\nexport function changeTheme(theme){\n    return{\n        type:CHANGE_THEME,\n    }\n}","import React , { useState }from 'react'\nimport { Card } from  '@uifabric/react-cards';\nimport { Dropdown } from '@fluentui/react/lib/Dropdown';\nimport { Text, initializeIcons } from '@fluentui/react';\nimport { PrimaryButton } from 'office-ui-fabric-react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { deleteTodo, updateTodo , addTodo} from '../redux/actions';\nimport { useHistory } from \"react-router-dom\"\nconst statusOptions = [\n    {key:'ToDo', text:'ToDo'},\n    {key:'Ongoing', text :'Ongoing'},\n    {key:'Stalled', text :'Stalled'},\n    {key:'Done', text :'Done'}\n  ];\n\n  const cardTokens = { childrenMargin: 12 };\nconst TodoItem = (props) => {\n    const {id ,title , desc , due, stat, confirm} = props;\n    const dispatch = useDispatch();\n    const [status, setStatus] = useState(stat),\n          [edit, setEdit] = useState(false);\n    const history = useHistory();\n    const {theme} = useSelector(state => ({...state}))\n    return (\n        <Card aria-label=\"Clickable horizontal card \" horizontal tokens={cardTokens} className = {theme.mode?\"card card-light\":\"card card-dark\"}>\n            <Card.Section>\n                <Text >\n                {title} . {due != `\"`?due:\"No due date specified\"}\n                </Text>\n                <Text >{desc}</Text>\n                {stat?<Dropdown\n                        label=\"Status\"\n                        selectedKey={status ? status.key : undefined}\n                        onChange={(e,item) =>{\n                            setEdit(true);\n                            setStatus(item)\n                        }}\n                        placeholder={status}\n                        options={statusOptions}\n                        value = {status}\n                    />:<Text> Status Not specified</Text>}\n                {confirm?<div>\n                    <PrimaryButton \n                text = \"Back\"\n                onClick = {() => {\n                    history.push(\"/add\");\n                }}\n                className = \"ctr-btn\"\n                />\n                <PrimaryButton \n                text = \"Save\"\n                onClick = {() => {\n                    dispatch(addTodo({id,name:title,desc,dueDate:due,status:stat}))\n                    window.localStorage.removeItem(\"TodoInfo\")\n                    history.push(\"/\");\n                }}\n                className = \"ctr-btn\"\n                />\n                </div>:<div><PrimaryButton \n                text = \"Save\"\n                disabled = {!edit}\n                onClick = {() => {\n                    if(status.key === \"Done\"){\n                        window.confirm(\"Mark as done? The card will be Deleted.\")\n                        dispatch(deleteTodo(id))\n                    } else {\n                        dispatch(updateTodo({id,status}))\n                        setEdit(false)\n                    }\n                }}\n                className = \"ctr-btn\"\n                />\n                <PrimaryButton \n                text = \"Delete\"\n                className = \"danger-btn ctrl-btn\"\n                onClick = {() => dispatch(deleteTodo(id))}\n                /></div>}\n            </Card.Section>\n            </Card>\n    )\n}\n\nexport default TodoItem\n","import React , { useState }from 'react'\nimport {useSelector} from 'react-redux';\nimport TodoItem from './TodoItem';\n\n\n\n\n\nconst TodoList = () => {\n    const {todos} = useSelector(state => ({...state}));\n    // console.log(todos);\n    const style = {\n        margin: '10vh 0',\n    }\n    return (\n        <div style = {style}>\n            <h1>Todo List</h1>\n            {todos.map(({id,name,desc,dueDate,status}) => (<TodoItem key = {id} id = {id} title = {name} desc = {desc} due = {dueDate} stat = {status} confirm = {false}/>))}\n            \n        </div>\n    )\n}\n\nexport default TodoList\n","import React from 'react'\nimport TodoItem from './TodoItem';\n\nconst style = {\n    margin:\"10vh 0\"\n}\nconst ConfirmAdd = () => {\n    const {id,title,desc,dueDate, status} = JSON.parse(window.localStorage.getItem(\"TodoInfo\"))\n    return (\n        <div style = {style}>\n            <h1>Confirm task</h1>\n            <TodoItem \n            id = {id} \n            title = {title} \n            desc = {desc} \n            due = {dueDate} \n            stat = {status} \n            confirm = {true}\n            />\n            \n        </div>\n    )\n}\n\nexport default ConfirmAdd\n","import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux';\nimport {changeTheme} from '../redux/actions'\nconst ThemeButton = () => {\n    const dispatch = useDispatch()\n    const {theme} = useSelector(state => ({...state}))\n    return (\n        <div className  = {theme.mode?\"themebtn themebtn-light\":\"themebtn themebtn-dark\"} onClick = {() => dispatch(changeTheme())}>\n           {theme.mode?<i class=\"ms-Icon ms-Icon--ClearNight\" aria-hidden=\"true\"></i>:\n            <i class=\"ms-Icon ms-Icon--Sunny\" aria-hidden=\"true\"></i>}\n\n        </div>\n    )\n}\n\nexport default ThemeButton \n","import './App.css';\nimport Header from \"./Components/Header\";\nimport AddTodo from \"./Components/AddTodo\";\nimport {Switch,Route} from 'react-router-dom';\nimport TodoList from './Components/TodoList';\nimport ConfirmAdd from './Components/ConfirmAdd';\nimport ThemeButton from './Components/ThemeButton';\nimport {useSelector} from 'react-redux';\n// import 'office-ui-fabric-react/dist/css/fabric.css';\nfunction App() {\n  const {theme} = useSelector(state => ({...state}))\n  return (\n    <div className={theme.mode?\"ms-Grid App-light\":\"ms-Grid App-dark\"} dir=\"ltr\">\n    <div className=\"ms-Grid-row\">\n      <div className=\"ms-Grid-col ms-sm2 \">\n        <Header />\n      </div>\n      <div className=\"main-element ms-Grid-col ms-sm10\">\n        <div className=\"ms-Grid-row center-child\">\n          <Switch>\n            <Route exact path = \"/\" component = {TodoList} />\n            <Route exact path = \"/add\" component = {AddTodo} />\n            <Route exact path = \"/confirm\" component = {ConfirmAdd} />\n          </Switch>\n        </div>\n        <ThemeButton />\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const todos = [\n    {\n        id:1,\n        name:\"task1\",\n        desc:\"Aute ipsum amet ut sint cillum incididunt sint anim dolor elit. Ut occaecat veniam officia enim duis eu quis. Irure mollit exercitation Lorem nulla culpa elit.\",\n        dueDate:\"2021-02-13\",\n        status:\"ToDo\"\n    },\n    {\n        id:2,\n        name:\"task2\",\n        desc:\"Aute ipsum amet ut sint cillum incididunt sint anim dolor elit. Ut occaecat veniam officia enim duis eu quis. Irure mollit exercitation Lorem nulla culpa elit.\",\n        dueDate:\"2021-02-14\",\n        status:\"ToDo\"\n    }\n]","import {createStore, combineReducers} from 'redux';\nimport {reducer,themeReducer} from \"./reducers\";\n\nexport const store = createStore(combineReducers({\n    todos:reducer,\n    theme:themeReducer\n}));","import {ADD_TODO,DELETE_TODO,UPDATE_TODO,CHANGE_THEME} from './actions';\nimport {todos} from './states'\nexport const reducer = (state = todos,action) =>{\n    let newTodos;\n    switch(action.type){\n        case ADD_TODO:\n            newTodos = [...state]\n            newTodos.push(action.payload);\n            return newTodos;\n        case DELETE_TODO:\n            newTodos = [...state]\n            newTodos = newTodos.filter(todo => todo.id != action.payload)\n            return newTodos;\n        case UPDATE_TODO:\n            newTodos = [...state]\n            let idx = 0\n            for(let i = 0; i < newTodos.length;i++){\n                if(newTodos[i].id  == action.payload.id){\n                    idx = i\n                    break;\n                }\n            }\n            newTodos[idx].status = action.payload.status;\n            return newTodos;\n    }\n    return state;\n}\n\nexport const themeReducer = (state ={mode:false}, action) =>{\n    switch (action.type) {\n        case CHANGE_THEME:\n            let mode = !state.mode\n            return {...state,mode}\n    \n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}